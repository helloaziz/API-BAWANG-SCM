name: API-Bawang-SCM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Cloud Run Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup GCP Service Account
        uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          version: "latest"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker
        run: |
          gcloud auth configure-docker

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.github/workflows/Dockerfile # Ganti dengan jalur file Dockerfile yang benar
          push: true
          tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/swagger-api-image:${{ github.sha }}

      - name: Deploy to Google Cloud Run
        run: |
          gcloud run deploy api-service \
            --image gcr.io/crucial-quarter-369308/swagger-api-image:${{ github.sha }} \
            --platform managed \
            --region asia-southeast2 \
            --allow-unauthenticated \
            --project crucial-quarter-369308
            --port 8080 \
            --update-env-vars PORT=8080 \
            --timeout 300s \
            --no-traffic

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: api-service
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "100"
    spec:
      containers:
        - image: gcr.io/your-project-id/your-image:latest
          ports:
            - containerPort: 3000
          env:
            - name: PORT
              value: "3000"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
#testing
